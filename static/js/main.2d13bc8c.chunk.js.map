{"version":3,"sources":["indexLoop.js","stop.js","bee.ts","wire.ts","pipe.ts","ground.ts","bike.ts","bird.ts","index.ts"],"names":["canvas","createStage","getCanvas","viewport","createViewport","gl","getContext","inputHandler","createViewportAwareInputHandler","allIndex","indexBee","indexBee2","indexWire","LastIndexWire","indexHouse","LastIndexHouse","indexCloud","LastIndexCloud","LastIndexTree","indexTree","indexSky","LastIndexSky","indexGround","LastIndexGround","indexBike1","indexBike2","indexPipe","allArray","bees01","bees02","skys","X","Y","wires","grounds","bikes01","bikes02","trees","houses","clouds","x","y","showIndex","index","key","toString","showArray","stop","checkStop","pipes","pipe","bird","resetStop","isTouched","accumulate","Bee","delta","beeX","beeYmax","beeYmin","array","push","Math","floor","random","powerup","img","batch","width","height","bee","indexOf","draw","splice","begin","end","Wire","lastIndex","wireY","wire","length","Pipe","img1","img2","Ground","Bike","speedBike","bike","Time_gia_toc","rotateAngle","roatateTime","stateTime","Bird","runAnimation","runAnimation1","getKeyFrame","PlayMode","LOOP","PI","a","camera","getCamera","createBatch","whiteTex","createWhiteTexture","ground","birdObj","loadTexture","birdsImg","imgSky","groundsImg","bee1Img","bee2Img","pipeImg","pipeDownImg","signImg","treeImg","wireImg","houseImg","cloudImg","bikeImg","bike2Img","birdImg","TextureRegion","splitTexture","createAnimation","console","log","clearColor","createGameLoop","BirdDown","touchBird","pushWire","pushBee","pushBike","pushPipe","pushGround","clear","COLOR_BUFFER_BIT","setProjection","combined","drawWire","drawBee","drawBike","drawPipe","drawGround","rotateRender","setColor","init"],"mappings":"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","file":"static/js/main.2d13bc8c.chunk.js","sourcesContent":["import {\r\n\r\n    createStage,\r\n    createViewport,\r\n    createViewportAwareInputHandler,\r\n} from 'gdxjs';\r\n\r\n\r\n\r\n  const stage = createStage();\r\n\r\nconst canvas = stage.getCanvas();\r\nexport const viewport = createViewport(canvas, 50, 100);\r\nexport const gl = viewport.getContext();\r\nexport const inputHandler = createViewportAwareInputHandler(canvas, viewport);\r\n\r\nlet allIndex = {\r\n    indexBee:0,\r\n    indexBee2:0,\r\n    indexWire:0,\r\n    LastIndexWire:0,\r\n    indexHouse:0,\r\n    LastIndexHouse:0,\r\n    indexCloud:0,\r\n    LastIndexCloud:0,\r\n    LastIndexTree:0,\r\n    indexTree: 0,\r\n    indexSky:0,\r\n    LastIndexSky:0,\r\n    indexGround:0,\r\n    LastIndexGround:0,\r\n    indexBike1:0,\r\n    indexBike2:0,\r\n    indexPipe:0\r\n}\r\n\r\n  \r\nexport let allArray = {\r\n    bees01:[],\r\n    bees02:[],\r\n    skys:[ {\r\n        X: 0,\r\n        Y: 0\r\n      },\r\n      {\r\n        X: 25,\r\n        Y: 0\r\n      },\r\n      {\r\n        X: 50,\r\n        Y: 0\r\n      }],\r\n    wires:[ {\r\n        X: 0,\r\n        Y: 65\r\n      },\r\n      {\r\n        X: 25,\r\n        Y: 65\r\n      },\r\n      {\r\n        X: 50,\r\n        Y: 65\r\n      }],\r\n    grounds:[ {\r\n        X: 0,\r\n        Y: 90\r\n      },\r\n      {\r\n        X: 10,\r\n        Y: 90\r\n      },\r\n      {\r\n        X: 20,\r\n        Y: 90\r\n      },\r\n      {\r\n        X: 30,\r\n        Y: 90\r\n      },\r\n      {\r\n        X: 40,\r\n        Y: 90\r\n      },\r\n      {\r\n        X: 50,\r\n        Y: 90\r\n      }],\r\n    bikes01:[\r\n        \r\n      ],\r\n    bikes02:[ ],\r\n    trees:[  {\r\n        X: 0,\r\n        Y: 75\r\n      },\r\n      {\r\n        X: 25,\r\n        Y: 75\r\n      },\r\n      {\r\n        X: 50,\r\n        Y: 75\r\n      }],\r\n    houses:[ {\r\n        X: 0,\r\n        Y: 65\r\n      },\r\n      {\r\n        X: 25,\r\n        Y: 65\r\n      },\r\n      {\r\n        X: 50,\r\n        Y: 65\r\n      }],\r\n    clouds:[{\r\n        X: 0,\r\n        Y: 60\r\n      },\r\n      {\r\n        X: 25,\r\n        Y: 60\r\n      },\r\n      {\r\n        X: 50,\r\n        Y: 60\r\n      }],\r\n    skys:[ {\r\n        X: 0,\r\n        Y: 0\r\n      },\r\n      {\r\n        X: 25,\r\n        Y: 0\r\n      },\r\n      {\r\n        X: 50,\r\n        Y: 0\r\n      }],\r\n    pipes:[],\r\n    bird : {\r\n        x:5,\r\n        y:40\r\n    }\r\n}\r\nexport function showIndex(index){ \r\n    for(let key in allIndex){\r\n        if(key.toString()==index.toString()){\r\n            return allIndex[key];\r\n            \r\n    }\r\n  \r\n    };\r\n\r\n}\r\nexport function showArray(index){ \r\n    for(let key in allArray){\r\n        if(key.toString()==index.toString()){\r\n            return allArray[key];\r\n            \r\n    }\r\n  \r\n    };\r\n\r\n}\r\n\r\n\r\n\r\n","\r\nimport {allArray} from \"./indexLoop\"\r\n\r\nexport let stop = 0\r\n\r\nexport function checkStop(){\r\n    for(let pipe of allArray.pipes){\r\n        // console.log(stop)\r\n        if(\r\n         allArray.bird.y < pipe.Y &&\r\n         allArray.bird.y > pipe.Y - 20 \r\n  ){\r\n    \r\nstop = 0\r\n      }\r\n     \r\n        else if (      \r\n           allArray.bird.y> pipe.Y &&allArray.bird.x + 5 > pipe.X &&allArray.bird.x < pipe.X + 10 ||\r\n           allArray.bird.y< pipe.Y - 20 &&allArray.bird.x + 5 > pipe.X &&allArray.bird.x < pipe.X + 10 ||\r\n           allArray.bird.y>= 85){\r\n            stop = 1 ;\r\n  \r\n        }\r\n    }\r\n } \r\n\r\n export function resetStop(inputHandler){\r\n         if (inputHandler.isTouched() && stop == 1) {\r\n      for (let pipe of allArray.pipes) {\r\n        pipe.X = pipe.X - 30;\r\n      }\r\n      allArray.bird.y = 40;\r\n      stop = 0;\r\n    }\r\n }","import {\r\n  createAnimation,\r\n  createBatch,\r\n  createGameLoop,\r\n  createStage,\r\n  createViewport,\r\n  createViewportAwareInputHandler,\r\n  createWhiteTexture,\r\n  loadAtlas,\r\n  loadTexture,\r\n  PlayMode,\r\n  SpriteBatch,\r\n  Texture,\r\n  TextureRegion,\r\n  Vector2\r\n} from 'gdxjs';\r\nimport {stop} from \"./stop\"\r\n\r\nlet accumulate = 0;\r\n\r\n\r\nexport class Bee {\r\n    pushBee(delta:number,beeX:number,beeYmax:number,beeYmin:number,array:{X:number,Y:number,powerup:number}[]){\r\n     accumulate+=delta\r\n      \r\n      if (accumulate > 2 && stop == 0) {\r\n      \r\n        accumulate = 0;\r\n        \r\n            array.push({\r\n              X: beeX,\r\n              Y: Math.floor(Math.random() * (beeYmax - beeYmin + 1)) + beeYmin,\r\n              powerup: Math.random()\r\n            });\r\n      }\r\n    }\r\n\r\n    drawBee(img:Texture,batch:SpriteBatch,array:{X:number,Y:number,powerup:number}[],indexBee:number,width:number,height:number){\r\n   \r\n        for (let bee of array) {\r\n   \r\n            indexBee = array.indexOf(bee);\r\n            batch.draw(img, bee.X, bee.Y, width, height);\r\n      \r\n            if (bee.powerup < 0.4 && stop == 0) {\r\n              bee.X = bee.X - 0.2;\r\n            } else {\r\n              if (stop == 0) {\r\n                bee.X = bee.X - 0.5;\r\n              }\r\n            }\r\n            if (bee.X< -300) {\r\n              array.splice(indexBee, 1);\r\n\r\n            }\r\n          }\r\n        \r\n    }\r\n\r\n  \r\nbegin(batch:SpriteBatch){\r\nbatch.begin()\r\n}\r\nend(batch:SpriteBatch){\r\n  batch.end()\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import {\r\n    createAnimation,\r\n    createBatch,\r\n    createGameLoop,\r\n    createStage,\r\n    createViewport,\r\n    createViewportAwareInputHandler,\r\n    createWhiteTexture,\r\n    loadAtlas,\r\n    loadTexture,\r\n    PlayMode,\r\n    SpriteBatch,\r\n    Texture,\r\n    TextureRegion,\r\n    Vector2\r\n  } from 'gdxjs';\r\n  import {stop} from \"./stop\"\r\n\r\n  let accumulate = 0;\r\n  \r\n  \r\n  export class Wire {\r\n      pushWire(delta:number, lastIndex:number,array:{X:number,Y:number}[],indexWire:number,wireY:number){\r\n       accumulate+=delta\r\n        \r\n    \r\n        for (let wire of array) {\r\n            indexWire = array.indexOf(wire);\r\n           lastIndex = array.length - 1;\r\n        \r\n            if (accumulate > 2.5 && stop == 0) {\r\n              accumulate = 0;\r\n        \r\n              array.push({\r\n                X: array[lastIndex].X + 25,\r\n                Y: wireY\r\n              });\r\n            }\r\n            if (wire.X < -25) {\r\n              array.splice(indexWire, 1);\r\n            }\r\n          }\r\n      }\r\n  \r\n      drawWire(img:Texture,batch:SpriteBatch,array:{X:number,Y:number}[],width:number,height:number){\r\n     \r\n        for (let wire of array) {\r\n      \r\n            batch.draw(img, wire.X, wire.Y, width, height);\r\n      \r\n      \r\n            if (stop == 0) {\r\n              wire.X = wire.X - 0.1;\r\n            }\r\n          }\r\n          \r\n      }\r\n  \r\n\r\n  }\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  ","import {\r\n    createAnimation,\r\n    createBatch,\r\n    createGameLoop,\r\n    createStage,\r\n    createViewport,\r\n    createViewportAwareInputHandler,\r\n    createWhiteTexture,\r\n    loadAtlas,\r\n    loadTexture,\r\n    PlayMode,\r\n    SpriteBatch,\r\n    Texture,\r\n    TextureRegion,\r\n    Vector2\r\n  } from 'gdxjs';\r\n  import {stop} from \"./stop.js\" \r\n  let accumulate = 0;\r\n  // export let stop = 0;\r\n  \r\n  \r\n  export class Pipe {\r\n      pushPipe(bird:{x:number,y:number},delta:number,array:{X:number,Y:number}[],indexPipe:number){\r\n       accumulate+=delta\r\n  \r\n        if (accumulate > 1.5  && stop ==0) {\r\n        \r\n          accumulate = 0;\r\n          \r\n              array.push({\r\n                X: 45,\r\n\r\n                Y: Math.floor(Math.random() * (80 - 30 + 1)) + 30\r\n              \r\n              });\r\n        }\r\n        for (let pipe of array) {  \r\n            \r\n            if (pipe.X < -10) {\r\n              array.splice(indexPipe, 1);\r\n              \r\n          \r\n      }\r\n    }\r\n      }\r\n  \r\n      drawPipe(img:Texture,img1:Texture,img2:Texture,bird:{x:number,y:number},batch:SpriteBatch,array:{X:number,Y:number}[]){\r\n     \r\n          for (let pipe of array) {\r\n     \r\n      batch.draw(img, pipe.X, pipe.Y, 10, 100);\r\n      batch.draw(img1, pipe.X + 3.5, pipe.Y + 7, 3, 3);\r\n\r\n      batch.draw(img2, pipe.X, 90 - (90 - pipe.Y) - 20 - 100, 10, 100);\r\n      if (stop == 0) {\r\n        pipe.X = pipe.X - 0.5;\r\n      }\r\n      // if (\r\n      //   bird.y < pipe.Y &&\r\n      //   bird.y > pipe.Y - 20 &&\r\n      //     Math.round(bird.x - pipe.X - 2.5) == 0 \r\n      //   )  {\r\n      // }\r\n      // else if( \r\n      //   bird.y > pipe.Y && bird.x + 5 > pipe.X && bird.x < pipe.X + 10 ||\r\n      // bird.y < pipe.Y - 20 && bird.x + 5 > pipe.X && bird.x < pipe.X + 10 ||\r\n      // bird.y >= 85\r\n      // ){\r\n      //   pipe.X = pipe.X \r\n      // }\r\n    \r\n  \r\n    \r\n \r\n  }\r\n  \r\n  \r\n}\r\n\r\n  \r\n} \r\n  ","import {\r\n    createAnimation,\r\n    createBatch,\r\n    createGameLoop,\r\n    createStage,\r\n    createViewport,\r\n    createViewportAwareInputHandler,\r\n    createWhiteTexture,\r\n    loadAtlas,\r\n    loadTexture,\r\n    PlayMode,\r\n    SpriteBatch,\r\n    Texture,\r\n    TextureRegion,\r\n    Vector2\r\n  } from 'gdxjs';\r\n  import {stop} from \"./stop\"\r\n\r\n  let accumulate = 0;\r\n  \r\n  \r\n  export class Ground {\r\n      pushGround(delta:number, lastIndex:number,array:{X:number,Y:number}[],indexWire:number,wireY:number){\r\n       accumulate+=delta\r\n        \r\n    \r\n        for (let wire of array) {\r\n            indexWire = array.indexOf(wire);\r\n           lastIndex = array.length - 1;\r\n        \r\n            if (accumulate > 0.3 && stop == 0) {\r\n              accumulate = 0;\r\n        \r\n              array.push({\r\n                X: array[lastIndex].X + 10,\r\n                Y: wireY\r\n              });\r\n            }\r\n            if (wire.X < -10) {\r\n              array.splice(indexWire, 1);\r\n            }\r\n          }\r\n      }\r\n  \r\n      drawGround(img:Texture,batch:SpriteBatch,array:{X:number,Y:number}[]){\r\n     \r\n        for (let wire of array) {\r\n      \r\n            batch.draw(img, wire.X, wire.Y, 10, 10);\r\n      \r\n      \r\n            if (stop == 0) {\r\n              wire.X = wire.X - 0.5;\r\n            }\r\n          }\r\n          \r\n      }\r\n  \r\n    \r\n\r\n  }\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  ","import {\r\n    createAnimation,\r\n    createBatch,\r\n    createGameLoop,\r\n    createStage,\r\n    createViewport,\r\n    createViewportAwareInputHandler,\r\n    createWhiteTexture,\r\n    loadAtlas,\r\n    loadTexture,\r\n    PlayMode,\r\n    SpriteBatch,\r\n    Texture,\r\n    TextureRegion,\r\n    Vector2\r\n  } from 'gdxjs';\r\n  import {stop} from \"./stop\"\r\n  let accumulate = 0;\r\n  \r\n  \r\n  export class Bike {\r\n      pushBike(delta:number,beeX:number,array:{X:number,Y:number,powerup:number}[]){\r\n       accumulate+=delta\r\n        \r\n        if (accumulate > 3 && stop == 0) {\r\n        \r\n          accumulate = 0;\r\n          \r\n              array.push({\r\n                X: beeX,\r\n                Y: 80,\r\n                powerup: Math.random()\r\n              });\r\n        }\r\n      }\r\n  \r\n      drawBike(img:Texture,batch:SpriteBatch,array:{X:number,Y:number,powerup:number}[],indexBee:number,width:number,height:number,speedBike:number){\r\n     \r\n          for (let bike of array) {\r\n     \r\n              indexBee = array.indexOf(bike);\r\n              batch.draw(img, bike.X, bike.Y, width, height);\r\n        \r\n           \r\n                if (stop == 0) {\r\n                  bike.X = bike.X - speedBike;\r\n                }\r\n              \r\n              if (bike.X< -300) {\r\n                array.splice(indexBee, 1);\r\n  \r\n              }\r\n            }\r\n          \r\n      }\r\n  \r\n  \r\n  }\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  ","import {\r\n  Animation,\r\n    createAnimation,\r\n    createBatch,\r\n    createGameLoop,\r\n    createStage,\r\n    createViewport,\r\n    createViewportAwareInputHandler,\r\n    createWhiteTexture,\r\n    loadAtlas,\r\n    loadTexture,\r\n    PlayMode,\r\n    SpriteBatch,\r\n    TextureRegion,\r\n    Vector2\r\n  } from 'gdxjs';\r\nimport { ViewportAwareInputHandler } from 'gdxjs/lib/createViewportAwareInputHandler';\r\nimport {stop }from \"./stop\"\r\nlet accumulate = 0;\r\nlet Time_gia_toc = 0;\r\nlet rotateAngle = 7;\r\nlet roatateTime = 0;\r\nlet stateTime = 0;\r\n\r\n  export class Bird {\r\n      BirdDown(delta:number,bird:{x:number,y:number}){\r\n        Time_gia_toc = Time_gia_toc + delta;\r\n\r\n        if (stop == 0) {\r\n          bird.y = bird.y + 1.3 * Time_gia_toc;\r\n        } else {\r\n          bird.y = bird.y;\r\n        }\r\n        if (Time_gia_toc >= 2) {\r\n          Time_gia_toc = 0;\r\n        }\r\n      }\r\n\r\n      touchBird(inputHandler:ViewportAwareInputHandler,delta:number,bird:{x:number,y:number},array:{x:number,y:number}[]){\r\n accumulate += delta;\r\n    if (accumulate >= 1.5) {\r\n      accumulate = 0;\r\n    }\r\n    if (inputHandler.isTouched() && stop == 0) {\r\n      bird.y = bird.y - 1.5;\r\n      Time_gia_toc = 0;\r\n      rotateAngle = 7;\r\n      roatateTime = 0;\r\n\r\n     \r\n    }\r\n\r\n      }\r\nrotateRender(delta:number,runAnimation:Animation,runAnimation1:Animation,batch:SpriteBatch,bird:{x:number,y:number}){\r\n      if (stop == 0) {\r\n      roatateTime += delta;\r\n      rotateAngle = rotateAngle + 0.2 * roatateTime;\r\n    }\r\n\r\n    if (roatateTime >= 1.5) {\r\n      roatateTime = 0;\r\n    }\r\n    if (stop == 0) {\r\n      runAnimation\r\n        .getKeyFrame(stateTime, PlayMode.LOOP)\r\n        .draw(batch, bird.x, bird.y, 5, 4, 2.5, 2, (rotateAngle * Math.PI) / 4);\r\n    } else {\r\n      runAnimation1\r\n        .getKeyFrame(stateTime, PlayMode.LOOP)\r\n        .draw(batch, bird.x, bird.y, 5, 4, 2.5, 2, (rotateAngle * Math.PI) / 4);\r\n    }\r\n    stateTime +=delta\r\n    if (rotateAngle >= 10) {\r\n      rotateAngle = 10;\r\n    }\r\n\r\n \r\n}\r\n// checkBird(bird:{x:number,y:number},array:{x:number,y:number}[],stop:number){\r\n//   for(let pipe of array){\r\n// if (\r\n//         bird.y < pipe.y &&\r\n//         bird.y > pipe.y - 20 &&\r\n//         Math.round(bird.x - pipe.x - 2.5) == 0 &&\r\n//         stop == 0\r\n//       ) {\r\n//       } else if (\r\n//         (bird.y > pipe.y && bird.x + 5 > pipe.x && bird.x < pipe.x + 10) ||\r\n//         (bird.y < pipe.y - 20 && bird.x + 5 > pipe.x && bird.x < pipe.x + 10) ||\r\n//         bird.y >= 85\r\n//       ) {\r\n//         stop = 1;\r\n//       }\r\n    \r\n// }\r\n  }\r\n","import './index.css';\nimport {\n  createAnimation,\n  createBatch,\n  createGameLoop,\n  createWhiteTexture,\n  TextureRegion,\n  loadTexture\n} from 'gdxjs';\nimport './bee.ts';\nimport { Bee } from './bee';\nimport {\n  showArray,\n  showIndex,\n  gl,\n  viewport,\n  inputHandler\n} from './indexLoop.js';\nimport { checkStop, resetStop } from './stop';\nimport { Wire } from './wire';\nimport { Pipe } from './pipe';\nimport { Ground } from './ground';\nimport { Bike } from './bike';\nimport { Bird } from './bird';\n\nconst init = async () => {\n  const camera = viewport.getCamera();\n  const batch = createBatch(gl);\n  const whiteTex = createWhiteTexture(gl);\n  let bee = new Bee();\n  let wire = new Wire();\n  let pipe = new Pipe();\n  let ground = new Ground();\n  let bike = new Bike();\n  let birdObj = new Bird();\n\nlet birdsImg = await loadTexture(gl, './main.png');\nlet imgSky = await loadTexture(gl, './sky.jpg');\n  let groundsImg = await loadTexture(gl, './base.jpg');\n  let bee1Img = await loadTexture(gl, './bee01.png');\n  let bee2Img = await loadTexture(gl, './bee02.png');\n  let pipeImg = await loadTexture(gl, './pipe.png');\n  let pipeDownImg = await loadTexture(gl, './pipe-down.png');\n  let signImg = await loadTexture(gl, './sign.png');\n  let treeImg = await loadTexture(gl, './tree.png');\n  let wireImg = await loadTexture(gl, './wire.png');\n  let houseImg = await loadTexture(gl, './house.png');\n  let cloudImg = await loadTexture(gl, './cloud.png');\n  let bikeImg = await loadTexture(gl, './bike.png');\n  let bike2Img = await loadTexture(gl, './bike2.png');\n\n  const birdImg = TextureRegion.splitTexture(birdsImg, 3, 1);\n\n  const runAnimation = createAnimation(0.1, birdImg);\n\n  const runAnimation1 = createAnimation(50, birdImg);\n  console.log(\"hello\")\n\n  gl.clearColor(0, 0, 0, 1);\n  createGameLoop(delta => {\n    birdObj.BirdDown(delta, showArray('bird'));\n    birdObj.touchBird(\n      inputHandler,\n      delta,\n      showArray('bird'),\n      showArray('pipes')\n    );\n    resetStop(inputHandler);\n\n    wire.pushWire(\n      delta,\n      showIndex('LastIndexSky'),\n      showArray('skys'),\n      showIndex('indexSky'),\n      0\n    );\n    wire.pushWire(\n      delta,\n      showIndex('LastIndexCloud'),\n      showArray('clouds'),\n      showIndex('indexCloud'),\n      60\n    );\n    wire.pushWire(\n      delta,\n      showIndex('LastIndexHouse'),\n      showArray('houses'),\n      showIndex('indexHouse'),\n      65\n    );\n    wire.pushWire(\n      delta,\n      showIndex('LastIndexTree'),\n      showArray('trees'),\n      showIndex('indexTree'),\n      75\n    );\n    wire.pushWire(\n      delta,\n      showIndex('LastIndexWire'),\n      showArray('wires'),\n      showIndex('indexWire'),\n      65\n    );\n\n    bee.pushBee(delta, 80, 50, 30, showArray('bees01'));\n    bee.pushBee(delta, 50, 60, 20, showArray('bees02'));\n\n    bike.pushBike(delta, 25, showArray('bikes01'));\n    bike.pushBike(delta, 45, showArray('bikes02'));\n\n    pipe.pushPipe(\n      showArray('bird'),\n      delta,\n      showArray('pipes'),\n      showIndex('indexPipe')\n    );\n    ground.pushGround(\n      delta,\n      showIndex('LastIndexGround'),\n      showArray('grounds'),\n      showIndex('indexGround'),\n      90\n    );\n\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    batch.setProjection(camera.combined);\n    batch.begin();\n    batch.draw(whiteTex, 0, 0, 50, 100);\n\n    wire.drawWire(imgSky, batch, showArray('skys'), 25, 75);\n    wire.drawWire(cloudImg, batch, showArray('clouds'), 25, 25);\n    wire.drawWire(houseImg, batch, showArray('houses'), 25, 25);\n    wire.drawWire(wireImg, batch, showArray('wires'), 25, 25);\n\n    bee.drawBee(\n      bee1Img,\n      batch,\n      showArray('bees01'),\n      showIndex('indexBee'),\n      15,\n      7.5\n    );\n    bee.drawBee(\n      bee2Img,\n      batch,\n      showArray('bees02'),\n      showIndex('indexBee2'),\n      9,\n      7.7\n    );\n\n    wire.drawWire(treeImg, batch, showArray('trees'), 25, 15);\n\n    bike.drawBike(\n      bikeImg,\n      batch,\n      showArray('bikes01'),\n      showIndex('indexBike1'),\n      60,\n      10,\n      0.3\n    );\n    bike.drawBike(\n      bike2Img,\n      batch,\n      showArray('bikes02'),\n      showIndex('indexBike2'),\n      60,\n      10,\n      0.5\n    );\n    pipe.drawPipe(\n      pipeImg,\n      signImg,\n      pipeDownImg,\n      showArray('bird'),\n      batch,\n      showArray('pipes')\n    );\n    ground.drawGround(groundsImg, batch, showArray('grounds'));\n    birdObj.rotateRender(\n      delta,\n      runAnimation,\n      runAnimation1,\n      batch,\n      showArray('bird')\n    );\n\n    checkStop();\n\n    batch.setColor(0.4, 0.4, 0.4, 1);\n\n    batch.setColor(1, 1, 1, 1);\n\n    batch.end();\n  });\n};\n\ninit();\n"],"sourceRoot":""}