{"version":3,"sources":["index.tsx"],"names":["indexPipe","indexWire","indexBike","indexBike2","indexGround","indexHouse","indexTree","indexSky","indexBee","indexBee2","lastIndexGround","lastIndexWire","lastIndexCloud","lastIndexSky","lastIndexTree","lastIndexHouse","canvas","createStage","getCanvas","viewport","createViewport","inputHandler","createViewportAwareInputHandler","score","Realscore","stop","Time_gia_toc","rotateAngle","roatateTime","a","gl","getContext","camera","getCamera","batch","createBatch","whiteTex","createWhiteTexture","loadTexture","birdsImg","skyImg","groundsImg","bee1Img","bee2Img","pipeImg","pipeDownImg","signImg","treeImg","wireImg","houseImg","cloudImg","number1","number2","number3","number4","number5","number6","number7","number8","number9","number0","bikeImg","bike2Img","birdImg","TextureRegion","splitTexture","bird","x","y","loadAtlas","mainAtlas","findRegions","runAnimation","createAnimation","runAnimation1","bees01","bees02","rotateIndex","bikes1","speedup","bikes2","pipes","wires","clouds","houses","skys","trees","grounds","accumulate","accuSky","accuHouse","accuGround","accumulate1","accuTree","accumulate2","accuPipe","accumulateBee2","stateTime","accuUp","accuCloud","clearColor","createGameLoop","delta","isTouched","pipe","push","Math","floor","random","powerup","sky","indexOf","length","splice","house","tree","wire","cloud","indexCloud","ground","clear","COLOR_BUFFER_BIT","setProjection","combined","begin","draw","console","log","bee","bike","round","Number","isInteger","toString","i","getKeyFrame","PlayMode","LOOP","PI","setColor","end","init"],"mappings":"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","file":"static/js/main.f5cc086e.chunk.js","sourcesContent":["import './index.css';\r\nimport {\r\n  createAnimation,\r\n  createBatch,\r\n  createGameLoop,\r\n  createStage,\r\n  createViewport,\r\n  createViewportAwareInputHandler,\r\n  createWhiteTexture,\r\n  loadAtlas,\r\n  loadTexture,\r\n  PlayMode,\r\n  TextureRegion,\r\n  Vector2\r\n} from 'gdxjs';\r\nimport { time } from 'console';\r\nimport { SSL_OP_SSLEAY_080_CLIENT_DH_BUG } from 'constants';\r\n\r\n// // WebGL\r\nconst stage = createStage();\r\n\r\nconst canvas = stage.getCanvas();\r\n// const ctx = canvas.getContext(\"2d\")\r\nconst viewport = createViewport(canvas, 50, 100);\r\nlet count = 0;\r\nconst inputHandler = createViewportAwareInputHandler(canvas, viewport);\r\nlet store = {\r\n  x: 5,\r\n  y: 5\r\n};\r\nlet score = 0;\r\nlet Realscore = '';\r\nlet stop = 0;\r\nlet indexPipe;\r\nlet indexWire;\r\nlet indexBike;\r\nlet indexBike2;\r\nlet indexGround;\r\nlet indexHouse;\r\nlet indexTree;\r\nlet indexSky;\r\nlet indexBee;\r\nlet indexBee2;\r\nlet Time_gia_toc = 0;\r\nlet rotateAngle = 7;\r\nlet roatateTime = 0;\r\nlet lastIndexGround;\r\nlet lastIndexWire;\r\nlet lastIndexBee01;\r\nlet lastIndexBee02;\r\nlet lastIndexCloud;\r\nlet lastIndexSky;\r\nlet lastIndexTree;\r\nlet lastIndexHouse;\r\n\r\nconst init = async () => {\r\n  // const stage = createStage();\r\n  // const canvas = stage.getCanvas();\r\n\r\n  // const viewport = createViewport(canvas, 50, 100);\r\n\r\n  const gl = viewport.getContext();\r\n  const camera = viewport.getCamera();\r\n\r\n  let breakFun = function breakFunc() {};\r\n\r\n  const batch = createBatch(gl);\r\n  const whiteTex = createWhiteTexture(gl);\r\n  const birdsImg = await loadTexture(gl, './main.png');\r\n  const skyImg = await loadTexture(gl, './sky.jpg');\r\n  const groundsImg = await loadTexture(gl, './base.jpg');\r\n  const bee1Img = await loadTexture(gl, './bee01.png');\r\n  const bee2Img = await loadTexture(gl, './bee02.png');\r\n\r\n  const pipeImg = await loadTexture(gl, './pipe.png');\r\n  const pipeDownImg = await loadTexture(gl, './pipe-down.png');\r\n  const signImg = await loadTexture(gl, './sign.png');\r\n  const treeImg = await loadTexture(gl, './tree.png');\r\n  const wireImg = await loadTexture(gl, './wire.png');\r\n  const houseImg = await loadTexture(gl, './house.png');\r\n  const cloudImg = await loadTexture(gl, './cloud.png');\r\n  const sora = await loadTexture(gl, './sora.jpg');\r\n  const number1 = await loadTexture(gl, './1.png');\r\n  const number2 = await loadTexture(gl, './2.png');\r\n  const number3 = await loadTexture(gl, './3.png');\r\n  const number4 = await loadTexture(gl, './4.png');\r\n  const number5 = await loadTexture(gl, './5.png');\r\n  const number6 = await loadTexture(gl, './6.png');\r\n  const number7 = await loadTexture(gl, './7.png');\r\n  const number8 = await loadTexture(gl, './8.png');\r\n  const number9 = await loadTexture(gl, './9.png');\r\n  const number0 = await loadTexture(gl, './0.png');\r\n  const square = await loadTexture(gl, './square.png');\r\n  const bikeImg = await loadTexture(gl, './bike.png');\r\n  const bike2Img = await loadTexture(gl, './bike2.png');\r\n\r\n  const birdImg = TextureRegion.splitTexture(birdsImg, 3, 1);\r\n\r\n  const bird = {\r\n    x: 5,\r\n    y: 40\r\n  };\r\n\r\n  const mainAtlas = await loadAtlas(gl, './enemy.atlas', {});\r\n  const runRegions = mainAtlas.findRegions('boss_projectile_A');\r\n  const runRegions1 = mainAtlas.findRegions('boss_die');\r\n  const runAnimation = createAnimation(0.1, birdImg);\r\n\r\n  const runAnimation1 = createAnimation(50, birdImg);\r\n\r\n  const bees01: { x: number; y: number; powerup: number }[] = [];\r\n  const bees02: { x: number; y: number; powerup: number }[] = [];\r\n  const rotate = [\r\n    -4,\r\n    4.5,\r\n    -5,\r\n    -5.5,\r\n    -6,\r\n    -6.5,\r\n    -7,\r\n    -7.5,\r\n    -8,\r\n    -8.5,\r\n    -9,\r\n    -9.5,\r\n    -10,\r\n    -10.5,\r\n    -11,\r\n    -11.5,\r\n    -12,\r\n    -12.5,\r\n    -13,\r\n    -13.5,\r\n    -14,\r\n    15,\r\n    -15.5,\r\n    -16,\r\n    10,\r\n    9.5,\r\n    9,\r\n    8.5,\r\n    8,\r\n    7.5,\r\n    7,\r\n    6.5,\r\n    6,\r\n    5.5,\r\n    5,\r\n    4.5,\r\n    4,\r\n    3.5,\r\n    3,\r\n    2.5,\r\n    2\r\n  ];\r\n  let rotateIndex = 0;\r\n  let storeValue;\r\n  const bikes1: { x: number; y: number; speedup: number }[] = [\r\n    {\r\n      x: 25,\r\n      y: 80,\r\n      speedup: 0\r\n    }\r\n  ];\r\n  const bikes2: { x: number; y: number; speedup: number }[] = [\r\n    {\r\n      x: 15,\r\n      y: 80,\r\n      speedup: 0\r\n    }\r\n  ];\r\n\r\n  const pipes: { x: number; y: number }[] = [];\r\n\r\n  const wires: { x: number; y: number }[] = [\r\n    {\r\n      x: 0,\r\n      y: 65\r\n    },\r\n    {\r\n      x: 25,\r\n      y: 65\r\n    },\r\n    {\r\n      x: 50,\r\n      y: 65\r\n    }\r\n  ];\r\n  const clouds: { x: number; y: number }[] = [\r\n    {\r\n      x: 0,\r\n      y: 65\r\n    },\r\n    {\r\n      x: 25,\r\n      y: 65\r\n    },\r\n    {\r\n      x: 50,\r\n      y: 65\r\n    }\r\n  ];\r\n  const houses: { x: number; y: number }[] = [\r\n    {\r\n      x: 0,\r\n      y: 65\r\n    },\r\n    {\r\n      x: 25,\r\n      y: 65\r\n    },\r\n    {\r\n      x: 50,\r\n      y: 65\r\n    }\r\n  ];\r\n  const skys: { x: number; y: number }[] = [\r\n    {\r\n      x: 0,\r\n      y: 65\r\n    },\r\n    {\r\n      x: 25,\r\n      y: 65\r\n    },\r\n    {\r\n      x: 50,\r\n      y: 65\r\n    }\r\n  ];\r\n  const trees: { x: number; y: number }[] = [\r\n    {\r\n      x: 0,\r\n      y: 65\r\n    },\r\n    {\r\n      x: 25,\r\n      y: 65\r\n    },\r\n    {\r\n      x: 50,\r\n      y: 65\r\n    }\r\n  ];\r\n\r\n  let treeIndex = 0;\r\n  let wireIndex = 0;\r\n  // const treebase = {\r\n  //   x: 40,\r\n  //   y: 80\r\n  // }\r\n  const grounds: { x: number; y: number }[] = [\r\n    {\r\n      x: 0,\r\n      y: 90\r\n    },\r\n    {\r\n      x: 10,\r\n      y: 90\r\n    },\r\n    {\r\n      x: 20,\r\n      y: 90\r\n    },\r\n    {\r\n      x: 30,\r\n      y: 90\r\n    },\r\n    {\r\n      x: 40,\r\n      y: 90\r\n    },\r\n    {\r\n      x: 50,\r\n      y: 90\r\n    }\r\n  ];\r\n\r\n  let indexMemo = 0;\r\n  let indexMole = 0;\r\n  const DROP_RATE = 4;\r\n  let accumulate = 0; //?\r\n  let accuSky = 0;\r\n  let accuHouse = 0;\r\n  let accuGround = 0;\r\n  let accumulate1 = 0; //?\r\n  let accuTree = 0;\r\n  let accumulate2 = 0;\r\n  let accuPipe = 0;\r\n  let accumulateBee2 = 0;\r\n  let indexCloud;\r\n\r\n  const mole_SIZE = 10;\r\n\r\n  let oldstore = {\r\n    x: 0,\r\n    y: 0\r\n  };\r\n  let signal = 1;\r\n  let drawSignal = 0;\r\n  let stateTime = 0; //?\r\n  let accumulateScore = 0;\r\n  let accuUp = 0;\r\n  let accuCloud = 0;\r\n  gl.clearColor(0, 0, 0, 1);\r\n  createGameLoop(delta => {\r\n    accuUp += delta;\r\n    if (accuUp >= 1.5) {\r\n      accuUp = 0;\r\n    }\r\n    if (inputHandler.isTouched() && stop == 0) {\r\n      bird.y = bird.y - 1.5;\r\n      Time_gia_toc = 0;\r\n      rotateAngle = 7;\r\n      roatateTime = 0;\r\n\r\n      if (rotateIndex >= 4) {\r\n        rotateIndex = rotateIndex - 4;\r\n      }\r\n    }\r\n    if (inputHandler.isTouched() && stop == 1) {\r\n      for (let pipe of pipes) {\r\n        pipe.x = pipe.x - 30;\r\n      }\r\n      bird.y = 40;\r\n      score = 0;\r\n      stop = 0;\r\n    }\r\n    accuCloud += delta;\r\n    accumulate += delta;\r\n    accumulate1 += delta;\r\n    accumulate2 += delta;\r\n    accuPipe += delta;\r\n    accuTree += delta;\r\n    accumulateBee2 += delta;\r\n    accuGround += delta;\r\n    accuHouse += delta;\r\n    accuSky += delta;\r\n\r\n    if (accuPipe > 1.5 && stop == 0) {\r\n      accuPipe = 0;\r\n\r\n      pipes.push({\r\n        x: 45,\r\n\r\n        y: Math.floor(Math.random() * (80 - 30 + 1)) + 30\r\n      });\r\n    }\r\n    if (accumulate2 > 3 && stop == 0) {\r\n      accumulate2 = 0;\r\n\r\n      bikes1.push({\r\n        x: 25,\r\n        y: 80,\r\n        speedup: Math.random()\r\n      });\r\n\r\n      bikes2.push({\r\n        x: 15,\r\n        y: 80,\r\n        speedup: Math.random()\r\n      });\r\n    }\r\n\r\n    if (accumulate > 2 && stop == 0) {\r\n      accumulate = 0;\r\n\r\n      bees01.push({\r\n        x: 80,\r\n        y: Math.floor(Math.random() * (50 - 30 + 1)) + 30,\r\n        powerup: Math.random()\r\n      });\r\n    }\r\n\r\n    if (accumulateBee2 > 2 && stop == 0) {\r\n      accumulateBee2 = 0;\r\n\r\n      bees02.push({\r\n        x: 60,\r\n        y: Math.floor(Math.random() * (60 - 20 + 1)) + 20,\r\n        powerup: Math.random()\r\n      });\r\n    }\r\n\r\n    for (let sky of skys) {\r\n      indexSky = skys.indexOf(sky);\r\n      lastIndexSky = skys.length - 1;\r\n\r\n      if (accuSky > 4 && stop == 0) {\r\n        accuSky = 0;\r\n\r\n        skys.push({\r\n          x: skys[lastIndexSky].x + 25,\r\n          y: 65\r\n        });\r\n      }\r\n      if (sky.x < -25) {\r\n        skys.splice(indexSky, 1);\r\n      }\r\n    }\r\n    for (let house of houses) {\r\n      indexHouse = houses.indexOf(house);\r\n      lastIndexHouse = houses.length - 1;\r\n\r\n      if (accuHouse > 4 && stop == 0) {\r\n        accuHouse = 0;\r\n\r\n        houses.push({\r\n          x: houses[lastIndexHouse].x + 25,\r\n          y: 65\r\n        });\r\n      }\r\n      if (house.x < -25) {\r\n        houses.splice(indexHouse, 1);\r\n      }\r\n    }\r\n    for (let tree of trees) {\r\n      indexTree = trees.indexOf(tree);\r\n      lastIndexTree = trees.length - 1;\r\n\r\n      if (accuTree > 4 && stop == 0) {\r\n        accuTree = 0;\r\n\r\n        trees.push({\r\n          x: trees[lastIndexTree].x + 25,\r\n          y: 65\r\n        });\r\n      }\r\n      if (tree.x < -25) {\r\n        trees.splice(indexTree, 1);\r\n      }\r\n    }\r\n    for (let wire of wires) {\r\n      indexWire = wires.indexOf(wire);\r\n      lastIndexWire = wires.length - 1;\r\n\r\n      if (accumulate1 > 4 && stop == 0) {\r\n        accumulate1 = 0;\r\n\r\n        wires.push({\r\n          x: wires[lastIndexWire].x + 25,\r\n          y: 65\r\n        });\r\n      }\r\n      if (wire.x < -25) {\r\n        wires.splice(indexWire, 1);\r\n      }\r\n    }\r\n    for (let cloud of clouds) {\r\n      indexCloud = clouds.indexOf(cloud);\r\n      lastIndexCloud = clouds.length - 1;\r\n\r\n      if (accuCloud > 4 && stop == 0) {\r\n        accuCloud = 0;\r\n\r\n        clouds.push({\r\n          x: clouds[lastIndexCloud].x + 25,\r\n          y: 65\r\n        });\r\n      }\r\n      if (cloud.x < -25) {\r\n        clouds.splice(indexCloud, 1);\r\n      }\r\n    }\r\n\r\n    for (let ground of grounds) {\r\n      indexGround = grounds.indexOf(ground);\r\n      lastIndexGround = grounds.length - 1;\r\n      if (accuGround > 0.3 && stop == 0) {\r\n        accuGround = 0;\r\n\r\n        grounds.push({\r\n          x: grounds[lastIndexGround].x + 10,\r\n          y: 90\r\n        });\r\n      }\r\n      if (ground.x < -10) {\r\n        grounds.splice(indexGround, 1);\r\n      }\r\n    }\r\n\r\n    gl.clear(gl.COLOR_BUFFER_BIT);\r\n    batch.setProjection(camera.combined);\r\n    batch.begin();\r\n    batch.draw(whiteTex, 0, 0, 50, 100);\r\n    Time_gia_toc = Time_gia_toc + delta;\r\n\r\n    if (stop == 0) {\r\n      bird.y = bird.y + 1.3 * Time_gia_toc;\r\n    } else {\r\n      bird.y = bird.y;\r\n    }\r\n    if (Time_gia_toc >= 2) {\r\n      Time_gia_toc = 0;\r\n    }\r\n    console.log(houses.length);\r\n    for (let sky of skys) {\r\n      batch.draw(skyImg, sky.x, sky.y - 70, 25, 75);\r\n\r\n      // batch.draw(house, wire.x, wire.y, 25, 25);\r\n\r\n      // batch.draw(treeImg, wire.x, wire.y + 15, 25, 10);\r\n\r\n      if (stop == 0) {\r\n        sky.x = sky.x - 0.1;\r\n      }\r\n    }\r\n    for (let cloud of clouds) {\r\n      batch.draw(cloudImg, cloud.x, cloud.y - 3, 25, 25);\r\n\r\n      // batch.draw(house, wire.x, wire.y, 25, 25);\r\n\r\n      // batch.draw(treeImg, wire.x, wire.y + 15, 25, 10);\r\n\r\n      if (stop == 0) {\r\n        cloud.x = cloud.x - 0.1;\r\n      }\r\n    }\r\n    for (let house of houses) {\r\n      // batch.draw(cloudImg, house.x, house.y - 3, 25, 25);\r\n\r\n      batch.draw(houseImg, house.x, house.y, 25, 25);\r\n\r\n      // batch.draw(treeImg, wire.x, wire.y + 15, 25, 10);\r\n\r\n      if (stop == 0) {\r\n        house.x = house.x - 0.1;\r\n      }\r\n    }\r\n    for (let wire of wires) {\r\n      // batch.draw(cloudImg, house.x, house.y - 3, 25, 25);\r\n\r\n      batch.draw(wireImg, wire.x, wire.y, 25, 25);\r\n\r\n      // batch.draw(treeImg, wire.x, wire.y + 15, 25, 10);\r\n\r\n      if (stop == 0) {\r\n        wire.x = wire.x - 0.1;\r\n      }\r\n    }\r\n\r\n    for (let tree of trees) {\r\n      batch.draw(treeImg, tree.x, tree.y + 15, 25, 15);\r\n\r\n      // batch.draw(house, wire.x, wire.y, 25, 25);\r\n\r\n      // batch.draw(treeImg, wire.x, wire.y + 15, 25, 10);\r\n\r\n      if (stop == 0) {\r\n        tree.x = tree.x - 0.1;\r\n      }\r\n    }\r\n\r\n    for (let bee of bees01) {\r\n      indexBee = bees01.indexOf(bee);\r\n      batch.draw(bee1Img, bee.x, bee.y, 15, 8.55);\r\n\r\n      if (bee.powerup < 0.4 && stop == 0) {\r\n        bee.x = bee.x - 0.2;\r\n      } else {\r\n        if (stop == 0) {\r\n          bee.x = bee.x - 0.5;\r\n        }\r\n      }\r\n      if (bee.x < -300) {\r\n        bees01.splice(indexBee, 1);\r\n      }\r\n    }\r\n\r\n    for (let bee of bees02) {\r\n      indexBee2 = bees02.indexOf(bee);\r\n      batch.draw(bee2Img, bee.x, bee.y, 9, 7.7);\r\n\r\n      if (bee.powerup < 0.2 && stop == 0) {\r\n        bee.x = bee.x - 0.2;\r\n      } else {\r\n        if (stop == 0) {\r\n          bee.x = bee.x - 0.8;\r\n        }\r\n      }\r\n      if (bee.x < -350) {\r\n        bees02.splice(indexBee2, 1);\r\n      }\r\n    }\r\n\r\n    for (let bike of bikes1) {\r\n      indexBike = bikes1.indexOf(bike);\r\n\r\n      batch.draw(bikeImg, bike.x, bike.y, 60, 10);\r\n\r\n      if (stop == 0) {\r\n        bike.x = bike.x - 0.3;\r\n      }\r\n      if (bike.x < -200) {\r\n        bikes1.splice(indexBike, 1);\r\n      }\r\n    }\r\n    for (let bike of bikes2) {\r\n      indexBike2 = bikes2.indexOf(bike);\r\n\r\n      batch.draw(bike2Img, bike.x, bike.y, 60, 10);\r\n\r\n      if (stop == 0) {\r\n        bike.x = bike.x - 0.5;\r\n      }\r\n      if (bike.x < -200) {\r\n        bikes2.splice(indexBike2, 1);\r\n      }\r\n    }\r\n    accumulateScore += delta;\r\n    for (let pipe of pipes) {\r\n      batch.draw(pipeImg, pipe.x, pipe.y, 10, 100);\r\n      batch.draw(signImg, pipe.x + 3.5, pipe.y + 7, 3, 3);\r\n\r\n      batch.draw(pipeDownImg, pipe.x, 90 - (90 - pipe.y) - 20 - 100, 10, 100);\r\n      if (stop == 0) {\r\n        pipe.x = pipe.x - 0.5;\r\n      }\r\n\r\n      if (\r\n        bird.y < pipe.y &&\r\n        bird.y > pipe.y - 20 &&\r\n        Math.round(bird.x - pipe.x - 2.5) == 0 &&\r\n        stop == 0\r\n      ) {\r\n        score = score + 0.5;\r\n      } else if (\r\n        (bird.y > pipe.y && bird.x + 5 > pipe.x && bird.x < pipe.x + 10) ||\r\n        (bird.y < pipe.y - 20 && bird.x + 5 > pipe.x && bird.x < pipe.x + 10) ||\r\n        bird.y >= 85\r\n      ) {\r\n        stop = 1;\r\n      }\r\n    }\r\n\r\n    if (Number.isInteger(score)) {\r\n      Realscore = score.toString();\r\n    }\r\n    for (var i = Realscore.length - 1; i >= 0; i--) {\r\n      switch (Realscore[i]) {\r\n        case '0':\r\n          batch.draw(number0, 10 + 2 * i, 0, 2, 2);\r\n          break;\r\n        case '1':\r\n          batch.draw(number1, 10 + 2 * i, 0, 2, 2);\r\n          break;\r\n        case '2':\r\n          batch.draw(number2, 10 + 2 * i, 0, 2, 2);\r\n          break;\r\n        case '3':\r\n          batch.draw(number3, 10 + 2 * i, 0, 2, 2);\r\n          break;\r\n        case '4':\r\n          batch.draw(number4, 10 + 2 * i, 0, 2, 2);\r\n          break;\r\n        case '5':\r\n          batch.draw(number5, 10 + 2 * i, 0, 2, 2);\r\n          break;\r\n        case '6':\r\n          batch.draw(number6, 10 + 2 * i, 0, 2, 2);\r\n          break;\r\n        case '7':\r\n          batch.draw(number7, 10 + 2 * i, 0, 2, 2);\r\n          break;\r\n        case '8':\r\n          batch.draw(number8, 10 + 2 * i, 0, 2, 2);\r\n          break;\r\n        case '9':\r\n          batch.draw(number9, 10 + 2 * i, 0, 2, 2);\r\n          break;\r\n      }\r\n    }\r\n\r\n    for (let ground of grounds) {\r\n      batch.draw(groundsImg, ground.x, ground.y, 10, 10);\r\n      if (stop == 0) {\r\n        ground.x = ground.x - 0.5;\r\n      }\r\n    }\r\n    if (stop == 0) {\r\n      roatateTime += delta;\r\n      rotateAngle = rotateAngle + 0.2 * roatateTime;\r\n    }\r\n\r\n    if (roatateTime >= 1.5) {\r\n      roatateTime = 0;\r\n    }\r\n    if (stop == 0) {\r\n      runAnimation\r\n        .getKeyFrame(stateTime, PlayMode.LOOP)\r\n        .draw(batch, bird.x, bird.y, 5, 4, 2.5, 2, (rotateAngle * Math.PI) / 4);\r\n    } else {\r\n      runAnimation1\r\n        .getKeyFrame(stateTime, PlayMode.LOOP)\r\n        .draw(batch, bird.x, bird.y, 5, 4, 2.5, 2, (rotateAngle * Math.PI) / 4);\r\n    }\r\n    if (rotateAngle >= 10) {\r\n      rotateAngle = 10;\r\n    }\r\n\r\n    if (rotateIndex < 40) {\r\n      rotateIndex = rotateIndex + 1;\r\n    }\r\n\r\n    stateTime += delta;\r\n\r\n    for (let pipe of pipes) {\r\n      indexPipe = pipes.indexOf(pipe);\r\n      if (pipe.x < -10) {\r\n        pipes.splice(indexPipe, 1);\r\n        // console.log(pipes.length)\r\n      }\r\n    }\r\n\r\n    indexMemo = 1;\r\n\r\n    // batch.draw(scoreImg, 2, 0, 10, 10)\r\n    // batch.draw(square, 20, 20, 10, 10, 7, 10, Math.PI / 2);\r\n    batch.setColor(0.4, 0.4, 0.4, 1);\r\n\r\n    batch.setColor(1, 1, 1, 1);\r\n\r\n    batch.end();\r\n  });\r\n  // grounds.every(function (e) {\r\n  //   e.x = e.x - 10\r\n  //   console.log(e.x)\r\n  // })\r\n};\r\n\r\ninit();\r\n\r\n// /**\r\n//  * 1. Typescript\r\n//  * 2. WebGL\r\n//  * 3. Async/await, promise\r\n//  */\r\n\r\n// const init = async () => {\r\n//   const stage = createStage();\r\n//   const canvas = stage.getCanvas();\r\n//   const viewport = createViewport(canvas, 40, 100);\r\n//   const gl = viewport.getContext();\r\n//   const batch = createBatch(gl);\r\n//   const camera = viewport.getCamera();\r\n\r\n//   const font = await loadFont(gl, './test.fnt');\r\n//   const text = font.createRenderer(100);\r\n\r\n//   gl.clearColor(0, 0, 0, 1);\r\n//   let i = 0;\r\n//   createGameLoop(delta => {\r\n//     i += delta;\r\n//     gl.clear(gl.COLOR_BUFFER_BIT);\r\n//     batch.setProjection(camera.combined);\r\n//     batch.begin();\r\n//     text.draw(batch, 'blahblah: ' + i, 10, 10, 5);\r\n//     batch.end();\r\n//   });\r\n// };\r\n\r\n// init();\r\n"],"sourceRoot":""}