{"version":3,"sources":["index.tsx"],"names":["indexPipe","indexWire","indexBike","indexBike2","indexGround","indexBee","indexBee2","canvas","createStage","getCanvas","viewport","createViewport","inputHandler","createViewportAwareInputHandler","score","Realscore","stop","a","gl","getContext","camera","getCamera","batch","createBatch","whiteTex","createWhiteTexture","loadTexture","birdsImg","skyImg","groundsImg","bee1Img","bee2Img","pipeImg","pipeDownImg","signImg","treeImg","wireImg","house","cloud","number1","number2","number3","number4","number5","number6","number7","number8","number9","number0","bikeImg","bike2Img","birdImg","TextureRegion","splitTexture","bird","x","y","loadAtlas","mainAtlas","findRegions","runAnimation","createAnimation","runAnimation1","bees01","bees02","bikes1","speedup","bikes2","pipes","wires","grounds","accumulate","accumulate1","accuTree","accumulate2","stateTime","clearColor","createGameLoop","delta","isTouched","pipe","push","Math","random","floor","powerup","wire","indexOf","splice","ground","clear","COLOR_BUFFER_BIT","setProjection","combined","begin","draw","bee","bike","round","console","log","Number","isInteger","toString","i","length","getKeyFrame","PlayMode","LOOP","setColor","end","init"],"mappings":"0HAgCIA,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,E,6CAlBEC,EAFQC,cAEOC,YAEfC,EAAWC,YAAeJ,EAAQ,GAAI,KAEtCK,EAAeC,YAAgCN,EAAQG,GAKzDI,EAAQ,EACRC,EAAY,GACZC,EAAO,GAYD,uCAAG,2HAAAC,EAAA,6DAMLC,EAAKR,EAASS,aACdC,EAASV,EAASW,YAET,aAITC,EAAQC,YAAYL,GACpBM,EAAWC,YAAmBP,GAdzB,SAeYQ,YAAYR,EAAI,cAf5B,cAeLS,EAfK,iBAgBUD,YAAYR,EAAI,aAhB1B,eAgBLU,EAhBK,iBAiBcF,YAAYR,EAAI,cAjB9B,eAiBLW,EAjBK,iBAkBWH,YAAYR,EAAI,eAlB3B,eAkBLY,EAlBK,iBAmBWJ,YAAYR,EAAI,eAnB3B,eAmBLa,EAnBK,iBAqBWL,YAAYR,EAAI,cArB3B,eAqBLc,EArBK,iBAsBeN,YAAYR,EAAI,mBAtB/B,eAsBLe,EAtBK,iBAuBWP,YAAYR,EAAI,cAvB3B,eAuBLgB,EAvBK,iBAwBWR,YAAYR,EAAI,cAxB3B,eAwBLiB,EAxBK,iBAyBWT,YAAYR,EAAI,cAzB3B,eAyBLkB,EAzBK,iBA0BSV,YAAYR,EAAI,eA1BzB,eA0BLmB,EA1BK,iBA2BSX,YAAYR,EAAI,eA3BzB,eA2BLoB,EA3BK,iBA4BQZ,YAAYR,EAAI,cA5BxB,gCA6BWQ,YAAYR,EAAI,WA7B3B,eA6BLqB,EA7BK,iBA8BWb,YAAYR,EAAI,WA9B3B,eA8BLsB,EA9BK,iBA+BWd,YAAYR,EAAI,WA/B3B,eA+BLuB,EA/BK,iBAgCWf,YAAYR,EAAI,WAhC3B,eAgCLwB,EAhCK,iBAiCWhB,YAAYR,EAAI,WAjC3B,eAiCLyB,EAjCK,iBAkCWjB,YAAYR,EAAI,WAlC3B,eAkCL0B,EAlCK,iBAmCWlB,YAAYR,EAAI,WAnC3B,eAmCL2B,EAnCK,iBAoCWnB,YAAYR,EAAI,WApC3B,eAoCL4B,EApCK,iBAqCWpB,YAAYR,EAAI,WArC3B,eAqCL6B,EArCK,iBAsCWrB,YAAYR,EAAI,WAtC3B,eAsCL8B,EAtCK,iBA4CWtB,YAAYR,EAAI,cA5C3B,eA4CL+B,EA5CK,iBA6CYvB,YAAYR,EAAI,eA7C5B,eA6CLgC,EA7CK,OAkDLC,EAAUC,IAAcC,aAAa1B,EAAU,EAAG,GAClD2B,EAAO,CACXC,EAAG,EACHC,EAAG,IArDM,UAwDaC,YAAUvC,EAAI,gBAAiB,IAxD5C,QAwDLwC,EAxDK,OAyDQA,EAAUC,YAAY,qBACrBD,EAAUC,YAAY,YACpCC,EAAeC,YAAgB,GAAKV,GACpCW,EAAgBD,YAAgB,GAAIV,GAIpCY,EAAsD,GACtDC,EAAsD,GAEtDC,EAAsD,CAC1D,CACEV,EAAG,GACHC,EAAG,GACHU,QAAS,IAGPC,EAAsD,CAC1D,CACEZ,EAAG,GACHC,EAAG,GACHU,QAAS,IAIPE,EAAqC,GACA,CACzC,CACEb,EAAG,EACHC,EAAG,KAGDa,GAAqC,CACzC,CACEd,EAAG,EACHC,EAAG,IAEL,CACED,EAAG,GACHC,EAAG,IAEL,CACED,EAAG,GACHC,EAAG,KAIS,EACA,EAKVc,GAAsC,CAC1C,CACEf,EAAG,EACHC,EAAG,IAEL,CACED,EAAG,GACHC,EAAG,IAEL,CACED,EAAG,GACHC,EAAG,IAEL,CACED,EAAG,GACHC,EAAG,IAEL,CACED,EAAG,GACHC,EAAG,IAEL,CACED,EAAG,GACHC,EAAG,KAKS,EACA,EACE,EACde,GAAa,EACbC,GAAc,EACdC,GAAW,EACXC,GAAc,EAEA,GAEH,CACbnB,EAAG,EACHC,EAAG,GAEQ,EACI,EACbmB,GAAY,EACM,EACtBzD,EAAG0D,WAAW,EAAG,EAAG,EAAG,GACvBC,aAAe,SAAAC,GAQb,GAPIlE,EAAamE,aAAuB,GAAR/D,IAE9BsC,EAAKE,EAAIF,EAAKE,EAAI,GAKhB5C,EAAamE,aAAuB,GAAR/D,EAAW,CAAC,IAAD,gBACxBoD,GADwB,IACzC,2BAAwB,CAAC,IAAhBY,EAAe,QACtBA,EAAKzB,EAAIyB,EAAKzB,EAAI,IAFqB,gCAIzCD,EAAKE,EAAI,GACT1C,EAAQ,EACRE,EAAO,EAGTuD,IAAcO,EACdN,IAAeM,EAGfL,IAAYK,GAFZJ,IAAeI,GAKG,GAAa,GAAR9D,IACrB0D,GAAc,EAEdT,EAAOgB,KAAK,CACV1B,EAAG,GACHC,EAAG,GACHU,QAASgB,KAAKC,WAIhBhB,EAAOc,KAAK,CACV1B,EAAG,GACHC,EAAG,GACHU,QAASgB,KAAKC,YAOdZ,GAAa,GAAa,GAARvD,IACpBuD,GAAa,EACbR,EAAOkB,KACL,CACE1B,EAAG,GACHC,EAAG0B,KAAKE,MAAM,GAAAF,KAAKC,UAA4B,GAC/CE,QAASH,KAAKC,WAGlBnB,EAAOiB,KACL,CACE1B,EAAG,GACHC,EAAG0B,KAAKE,MAAM,GAAAF,KAAKC,UAA4B,GAC/CE,QAASH,KAAKC,WAGlBf,EAAMa,KACJ,CACE1B,EAAG,GAEHC,EAAG0B,KAAKE,MAAM,GAAAF,KAAKC,UAA4B,MAhE/B,oBAuELd,IAvEK,IAuEtB,2BAAwB,CAAC,IAAhBiB,GAAe,QACtBrF,EAAYoE,GAAMkB,QAAQD,IAEtBd,GAAc,GAAa,GAARxD,IACrBwD,GAAc,EAEdH,GAAMY,KACJ,CACE1B,EAAG,GACHC,EAAG,MAML8B,GAAK/B,GAAK,IACZc,GAAMmB,OAAOvF,EAAW,IAvFN,sDA4FHqE,IA5FG,IA4FtB,8BAA4B,CAAC,IAApBmB,GAAmB,SAC1BrF,EAAckE,GAAQiB,QAAQE,IAE1BhB,GAAW,IAAe,GAARzD,IACpByD,GAAW,EAEXH,GAAQW,KACN,CACE1B,EAAG,GACHC,EAAG,MAMLiC,GAAOlC,GAAK,IACde,GAAQkB,OAAOpF,EAAa,IA5GV,kCA+HtBc,EAAGwE,MAAMxE,EAAGyE,kBACZrE,EAAMsE,cAAcxE,EAAOyE,UAC3BvE,EAAMwE,QACNxE,EAAMyE,KAAKvE,EAAU,EAAG,EAAG,GAAI,KAK7B8B,EAAKE,EADK,GAARxC,EACOsC,EAAKE,EAAI,GAGTF,EAAKE,EA1IM,sBAyJLa,IAzJK,IAyJtB,8BAAwB,CAAC,IAAhBiB,GAAe,SAGtBhE,EAAMyE,KAAKnE,EAAQ0D,GAAK/B,EAAG+B,GAAK9B,EAAI,GAAI,GAAI,IAG5ClC,EAAMyE,KAAKzD,EAAOgD,GAAK/B,EAAG+B,GAAK9B,EAAI,EAAG,GAAI,IAG1ClC,EAAMyE,KAAK1D,EAAOiD,GAAK/B,EAAG+B,GAAK9B,EAAG,GAAI,IAGtClC,EAAMyE,KAAK3D,EAASkD,GAAK/B,EAAG+B,GAAK9B,EAAG,GAAI,IAExClC,EAAMyE,KAAK5D,EAASmD,GAAK/B,EAAG+B,GAAK9B,EAAI,GAAI,GAAI,IAQjC,GAARxC,IACFsE,GAAK/B,EAAI+B,GAAK/B,EAAI,KAhLA,wDAwLNQ,GAxLM,IAwLtB,8BAAwB,CAAC,IAAhBiC,GAAe,SACtB3F,EAAW0D,EAAOwB,QAAQS,IAC1B1E,EAAMyE,KAAKjE,EAASkE,GAAIzC,EAAGyC,GAAIxC,EAAG,GAAI,IAElCwC,GAAIX,QAAU,IAAe,GAARrE,EACvBgF,GAAIzC,EAAIyC,GAAIzC,EAAI,GAGJ,GAARvC,IACFgF,GAAIzC,EAAIyC,GAAIzC,EAAI,IAKhByC,GAAIzC,GAAK,KACXQ,EAAOyB,OAAOnF,EAAU,IAvMN,wDA2MN2D,GA3MM,IA2MtB,8BAAwB,CAAC,IAAhBgC,GAAe,SACtB1F,EAAY0D,EAAOuB,QAAQS,IAC3B1E,EAAMyE,KAAKhE,EAASiE,GAAIzC,EAAGyC,GAAIxC,EAAG,EAAG,GAEjCwC,GAAIX,QAAU,IAAe,GAARrE,EACvBgF,GAAIzC,EAAIyC,GAAIzC,EAAI,GAGJ,GAARvC,IACFgF,GAAIzC,EAAIyC,GAAIzC,EAAI,IAKhByC,GAAIzC,GAAK,KACXS,EAAOwB,OAAOlF,EAAW,IA1NP,wDAgOL2D,GAhOK,IAgOtB,8BAAyB,CAAC,IAAjBgC,GAAgB,SACvB/F,EAAY+D,EAAOsB,QAAQU,IAE3B3E,EAAMyE,KAAK9C,EAASgD,GAAK1C,EAAG0C,GAAKzC,EAAG,GAAI,IAE5B,GAARxC,IACFiF,GAAK1C,EAAI0C,GAAK1C,EAAI,IAIhB0C,GAAK1C,GAAK,KACZU,EAAOuB,OAAOtF,EAAW,IA3OP,wDAsPLiE,GAtPK,IAsPtB,8BAAyB,CAAC,IAAjB8B,GAAgB,SACvB9F,EAAagE,EAAOoB,QAAQU,IAE5B3E,EAAMyE,KAAK7C,EAAU+C,GAAK1C,EAAG0C,GAAKzC,EAAG,GAAI,IAG7B,GAARxC,IACFiF,GAAK1C,EAAI0C,GAAK1C,EAAI,IAIhB0C,GAAK1C,GAAK,KACZY,EAAOqB,OAAOrF,EAAY,IAlQR,kCA6QH2E,EA7QG,sBA8QLV,GA9QK,IA8QtB,8BAAwB,CAAC,IAAhBY,GAAe,SAEtB1D,EAAMyE,KAAK/D,EAASgD,GAAKzB,EAAGyB,GAAKxB,EAAG,GAAI,KACxClC,EAAMyE,KAAK7D,EAAS8C,GAAKzB,EAAI,IAAKyB,GAAKxB,EAAI,EAAG,EAAG,GAGjDlC,EAAMyE,KAAK9D,EAAa+C,GAAKzB,EAAI,IAAM,GAAKyB,GAAKxB,GAAK,GAAM,IAAK,GAAI,KACzD,GAARxC,IACFgE,GAAKzB,EAAIyB,GAAKzB,EAAI,IAIhBD,EAAKE,EAAIwB,GAAKxB,GAChBF,EAAKE,EAAIwB,GAAKxB,EAAI,IACmB,GAArC0B,KAAKgB,MAAM5C,EAAKC,EAAIyB,GAAKzB,EAAI,MAGrB,GAARvC,GAGAF,GAAgB,GAChBqF,QAAQC,IAAItF,KAGLwC,EAAKE,EAAIwB,GAAKxB,GACrBF,EAAKC,EAAI,EAAIyB,GAAKzB,GAClBD,EAAKC,EAAIyB,GAAKzB,EAAI,IAClBD,EAAKE,EAAIwB,GAAKxB,EAAI,IAClBF,EAAKC,EAAI,EAAIyB,GAAKzB,GAClBD,EAAKC,EAAIyB,GAAKzB,EAAI,IAClBD,EAAKE,GAAK,MACVxC,EAAO,IA7SW,kCAqTlBqF,OAAOC,UAAUxF,KACnBC,EAAYD,EAAMyF,YAEpB,IAAK,IAAIC,GAAIzF,EAAU0F,OAAS,EAAGD,IAAK,EAAGA,KACzC,OAAQzF,EAAUyF,KAChB,IAAK,IACHlF,EAAMyE,KAAK/C,EAAS,GAAK,EAAIwD,GAAG,EAAG,EAAG,GACtC,MACF,IAAK,IACHlF,EAAMyE,KAAKxD,EAAS,GAAK,EAAIiE,GAAG,EAAG,EAAG,GACtC,MACF,IAAK,IACHlF,EAAMyE,KAAKvD,EAAS,GAAK,EAAIgE,GAAG,EAAG,EAAG,GACtC,MACF,IAAK,IACHlF,EAAMyE,KAAKtD,EAAS,GAAK,EAAI+D,GAAG,EAAG,EAAG,GACtC,MACF,IAAK,IACHlF,EAAMyE,KAAKrD,EAAS,GAAK,EAAI8D,GAAG,EAAG,EAAG,GACtC,MACF,IAAK,IACHlF,EAAMyE,KAAKpD,EAAS,GAAK,EAAI6D,GAAG,EAAG,EAAG,GACtC,MACF,IAAK,IACHlF,EAAMyE,KAAKnD,EAAS,GAAK,EAAI4D,GAAG,EAAG,EAAG,GACtC,MACF,IAAK,IACHlF,EAAMyE,KAAKlD,EAAS,GAAK,EAAI2D,GAAG,EAAG,EAAG,GACtC,MACF,IAAK,IACHlF,EAAMyE,KAAKjD,EAAS,GAAK,EAAI0D,GAAG,EAAG,EAAG,GACtC,MACF,IAAK,IACHlF,EAAMyE,KAAKhD,EAAS,GAAK,EAAIyD,GAAG,EAAG,EAAG,GAtVtB,sBA6VHlC,IA7VG,IA6VtB,8BAA4B,CAAC,IAApBmB,GAAmB,SAC1BnE,EAAMyE,KAAKlE,EAAY4D,GAAOlC,EAAGkC,GAAOjC,EAAG,GAAI,IACnC,GAARxC,IACFyE,GAAOlC,EAAIkC,GAAOlC,EAAI,KAhWJ,kCAuWV,GAARvC,EACF4C,EACG8C,YAAY/B,GAAWgC,IAASC,MAChCb,KAAKzE,EAAOgC,EAAKC,EAAGD,EAAKE,EAAG,EAAG,GAGlCM,EACG4C,YAAY/B,GAAWgC,IAASC,MAChCb,KAAKzE,EAAOgC,EAAKC,EAAGD,EAAKE,EAAG,EAAG,GAGpCmB,IAAaG,EAlXS,sBAsXLV,GAtXK,IAsXtB,8BAAwB,CAAC,IAAhBY,GAAe,SACtBhF,EAAYoE,EAAMmB,QAAQP,IACtBA,GAAKzB,GAAK,IACZa,EAAMoB,OAAOxF,EAAW,IAzXN,kCAkYV,EAUZsB,EAAMuF,SAAS,GAAK,GAAK,GAAK,GAE9BvF,EAAMuF,SAAS,EAAG,EAAG,EAAG,GAKxBvF,EAAMwF,SAhjBG,6CAAH,qDAmkBVC,I","file":"static/js/main.b30c3597.chunk.js","sourcesContent":["import './index.css';\nimport {\n  createAnimation,\n  createBatch,\n  createGameLoop,\n  createStage,\n  createViewport,\n  createViewportAwareInputHandler,\n  createWhiteTexture,\n  loadAtlas,\n  loadTexture,\n  PlayMode,\n  TextureRegion,\n  Vector2\n} from 'gdxjs';\nimport { time } from 'console';\n\n// WebGL\nconst stage = createStage();\n\nconst canvas = stage.getCanvas();\n// const ctx = canvas.getContext(\"2d\")\nconst viewport = createViewport(canvas, 50, 100);\nlet count = 0\nconst inputHandler = createViewportAwareInputHandler(canvas, viewport);\nlet store = {\n  x: 5,\n  y: 5\n}\nlet score = 0;\nlet Realscore = \"\";\nlet stop = 0\nlet indexPipe\nlet indexWire\nlet indexBike\nlet indexBike2\nlet indexGround\nlet indexBee\nlet indexBee2\n\n\nlet drawTime = 0\n\nconst init = async () => {\n  // const stage = createStage();\n  // const canvas = stage.getCanvas();\n\n  // const viewport = createViewport(canvas, 50, 100);\n\n  const gl = viewport.getContext();\n  const camera = viewport.getCamera();\n\n  let breakFun = function breakFunc() {\n\n  }\n\n  const batch = createBatch(gl);\n  const whiteTex = createWhiteTexture(gl);\n  const birdsImg = await loadTexture(gl, './main.png');\n  const skyImg = await loadTexture(gl, './sky.jpg');\n  const groundsImg = await loadTexture(gl, './base.jpg');\n  const bee1Img = await loadTexture(gl, './bee01.png');\n  const bee2Img = await loadTexture(gl, './bee02.png');\n\n  const pipeImg = await loadTexture(gl, './pipe.png');\n  const pipeDownImg = await loadTexture(gl, './pipe-down.png');\n  const signImg = await loadTexture(gl, './sign.png');\n  const treeImg = await loadTexture(gl, './tree.png');\n  const wireImg = await loadTexture(gl, './wire.png');\n  const house = await loadTexture(gl, './house.png');\n  const cloud = await loadTexture(gl, './cloud.png');\n  const sora = await loadTexture(gl, './sora.jpg');\n  const number1 = await loadTexture(gl, './1.png');\n  const number2 = await loadTexture(gl, './2.png');\n  const number3 = await loadTexture(gl, './3.png');\n  const number4 = await loadTexture(gl, './4.png');\n  const number5 = await loadTexture(gl, './5.png');\n  const number6 = await loadTexture(gl, './6.png');\n  const number7 = await loadTexture(gl, './7.png');\n  const number8 = await loadTexture(gl, './8.png');\n  const number9 = await loadTexture(gl, './9.png');\n  const number0 = await loadTexture(gl, './0.png');\n\n\n\n\n\n  const bikeImg = await loadTexture(gl, './bike.png');\n  const bike2Img = await loadTexture(gl, './bike2.png');\n\n\n\n\n  const birdImg = TextureRegion.splitTexture(birdsImg, 3, 1)\n  const bird = {\n    x: 5,\n    y: 40\n  }\n\n  const mainAtlas = await loadAtlas(gl, './enemy.atlas', {});\n  const runRegions = mainAtlas.findRegions('boss_projectile_A');\n  const runRegions1 = mainAtlas.findRegions('boss_die');\n  const runAnimation = createAnimation(0.1, birdImg);\n  const runAnimation1 = createAnimation(50, birdImg);\n\n\n\n  const bees01: { x: number; y: number; powerup: number }[] = [];\n  const bees02: { x: number; y: number; powerup: number }[] = [];\n\n  const bikes1: { x: number; y: number; speedup: number }[] = [\n    {\n      x: 25,\n      y: 80,\n      speedup: 0\n    }\n  ];\n  const bikes2: { x: number; y: number; speedup: number }[] = [\n    {\n      x: 15,\n      y: 80,\n      speedup: 0\n    }\n  ];\n\n  const pipes: { x: number; y: number; }[] = [];\n  const trees: { x: number; y: number; }[] = [\n    {\n      x: 0,\n      y: 80\n    }\n  ];\n  const wires: { x: number; y: number; }[] = [\n    {\n      x: 0,\n      y: 65\n    },\n    {\n      x: 25,\n      y: 65\n    },\n    {\n      x: 50,\n      y: 65\n    }\n\n  ];\n  let treeIndex = 0;\n  let wireIndex = 0;\n  // const treebase = {\n  //   x: 40,\n  //   y: 80\n  // }\n  const grounds: { x: number; y: number }[] = [\n    {\n      x: 0,\n      y: 90\n    },\n    {\n      x: 10,\n      y: 90\n    },\n    {\n      x: 20,\n      y: 90\n    },\n    {\n      x: 30,\n      y: 90\n    },\n    {\n      x: 40,\n      y: 90\n    },\n    {\n      x: 50,\n      y: 90\n    }\n  ];\n\n\n  let indexMemo = 0;\n  let indexMole = 0;\n  const DROP_RATE = 4;\n  let accumulate = 0;//?\n  let accumulate1 = 0;//?\n  let accuTree = 0;\n  let accumulate2 = 0\n\n  const mole_SIZE = 10;\n\n  let oldstore = {\n    x: 0,\n    y: 0\n  }\n  let signal = 1\n  let drawSignal = 0;\n  let stateTime = 0;//?\n  let accumulateScore = 0;\n  gl.clearColor(0, 0, 0, 1);\n  createGameLoop(delta => {\n    if (inputHandler.isTouched() && stop == 0) {\n\n      bird.y = bird.y - 2\n\n\n\n    }\n    if (inputHandler.isTouched() && stop == 1) {\n      for (let pipe of pipes) {\n        pipe.x = pipe.x - 30\n      }\n      bird.y = 40\n      score = 0\n      stop = 0\n\n    }\n    accumulate += delta;\n    accumulate1 += delta;\n    accumulate2 += delta;\n\n    accuTree += delta\n\n\n    if (accumulate2 > 3 && stop == 0) {\n      accumulate2 = 0;\n\n      bikes1.push({\n        x: 25,\n        y: 80,\n        speedup: Math.random()\n\n      })\n\n      bikes2.push({\n        x: 15,\n        y: 80,\n        speedup: Math.random()\n\n      })\n    }\n\n\n\n    if (accumulate > 2 && stop == 0) {\n      accumulate = 0;\n      bees01.push(\n        {\n          x: 50,\n          y: Math.floor(Math.random() * (50 - 30 + 1)) + 30,\n          powerup: Math.random()\n        }\n      )\n      bees02.push(\n        {\n          x: 70,\n          y: Math.floor(Math.random() * (60 - 20 + 1)) + 20,\n          powerup: Math.random()\n        }\n      )\n      pipes.push(\n        {\n          x: 45,\n\n          y: Math.floor(Math.random() * (80 - 30 + 1)) + 30,\n        }\n      )\n\n\n    }\n\n    for (let wire of wires) {\n      indexWire = wires.indexOf(wire)\n\n      if (accumulate1 > 4 && stop == 0) {\n        accumulate1 = 0\n\n        wires.push(\n          {\n            x: 50,\n            y: 65,\n          }\n        )\n\n\n      }\n      if (wire.x < -25) {\n        wires.splice(indexWire, 1)\n      }\n    }\n\n\n    for (let ground of grounds) {\n      indexGround = grounds.indexOf(ground)\n\n      if (accuTree > 0.3 && stop == 0) {\n        accuTree = 0\n\n        grounds.push(\n          {\n            x: 49,\n            y: 90,\n          }\n        )\n\n\n      }\n      if (ground.x < -50) {\n        grounds.splice(indexGround, 1)\n      }\n    }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    batch.setProjection(camera.combined);\n    batch.begin();\n    batch.draw(whiteTex, 0, 0, 50, 100);\n\n\n\n    if (stop == 0) {\n      bird.y = bird.y + 0.5\n    }\n    else {\n      bird.y = bird.y\n    }\n\n\n\n    // batch.draw(treeImg, treebase.x, treebase.y, 20, 10)\n    // batch.draw(treeImg, treebase.x - 20, treebase.y, 20, 10)\n\n    // batch.draw(treeImg, treebase.x - 40, treebase.y, 20, 10)\n    // treebase.x = treebase.x - 0.1\n\n\n\n\n\n    for (let wire of wires) {\n\n\n      batch.draw(skyImg, wire.x, wire.y - 70, 25, 75)\n\n\n      batch.draw(cloud, wire.x, wire.y - 3, 25, 25)\n\n\n      batch.draw(house, wire.x, wire.y, 25, 25)\n\n\n      batch.draw(wireImg, wire.x, wire.y, 25, 25)\n\n      batch.draw(treeImg, wire.x, wire.y + 15, 25, 10)\n\n\n\n\n\n\n\n      if (stop == 0) {\n        wire.x = wire.x - 0.1\n      }\n\n\n\n\n    }\n\n    for (let bee of bees01) {\n      indexBee = bees01.indexOf(bee)\n      batch.draw(bee1Img, bee.x, bee.y, 20, 10)\n\n      if (bee.powerup < 0.4 && stop == 0) {\n        bee.x = bee.x - 0.2\n      }\n      else {\n        if (stop == 0) {\n          bee.x = bee.x - 0.5\n        }\n\n\n      }\n      if (bee.x < -200) {\n        bees01.splice(indexBee, 1)\n      }\n    }\n\n    for (let bee of bees02) {\n      indexBee2 = bees02.indexOf(bee)\n      batch.draw(bee2Img, bee.x, bee.y, 5, 5)\n\n      if (bee.powerup < 0.2 && stop == 0) {\n        bee.x = bee.x - 0.2\n      }\n      else {\n        if (stop == 0) {\n          bee.x = bee.x - 0.8\n        }\n\n\n      }\n      if (bee.x < -350) {\n        bees02.splice(indexBee2, 1)\n      }\n    }\n\n\n\n    for (let bike of bikes1) {\n      indexBike = bikes1.indexOf(bike)\n\n      batch.draw(bikeImg, bike.x, bike.y, 60, 10)\n\n      if (stop == 0) {\n        bike.x = bike.x - 0.3\n\n\n      }\n      if (bike.x < -200) {\n        bikes1.splice(indexBike, 1)\n      }\n\n\n\n\n\n\n\n\n    }\n    for (let bike of bikes2) {\n      indexBike2 = bikes2.indexOf(bike)\n\n      batch.draw(bike2Img, bike.x, bike.y, 60, 10)\n\n\n      if (stop == 0) {\n        bike.x = bike.x - 0.5\n\n\n      }\n      if (bike.x < -200) {\n        bikes2.splice(indexBike2, 1)\n      }\n\n\n\n\n\n\n\n\n    }\n    accumulateScore += delta\n    for (let pipe of pipes) {\n\n      batch.draw(pipeImg, pipe.x, pipe.y, 10, 100)\n      batch.draw(signImg, pipe.x + 3.5, pipe.y + 7, 3, 3)\n\n\n      batch.draw(pipeDownImg, pipe.x, (90 - (90 - pipe.y) - 20) - 100, 10, 100)\n      if (stop == 0) {\n        pipe.x = pipe.x - 0.4\n      }\n\n\n      if (bird.y < pipe.y &&\n        bird.y > pipe.y - 20 &&\n        Math.round(bird.x - pipe.x - 2.5) == 0 &&\n\n\n        stop == 0\n      ) {\n\n        score = score + 0.5\n        console.log(score)\n\n      }\n      else if (bird.y > pipe.y &&\n        bird.x + 5 > pipe.x &&\n        bird.x < pipe.x + 10 ||\n        bird.y < pipe.y - 20 &&\n        bird.x + 5 > pipe.x &&\n        bird.x < pipe.x + 10 ||\n        bird.y >= 85) {\n        stop = 1\n      }\n      // if (stop == 1) {\n      //   break;\n      // }\n    }\n    // console.log(accumulateScore)\n\n    if (Number.isInteger(score)) {\n      Realscore = score.toString();\n    }\n    for (var i = Realscore.length - 1; i >= 0; i--) {\n      switch (Realscore[i]) {\n        case \"0\":\n          batch.draw(number0, 10 + 2 * i, 0, 2, 2)\n          break;\n        case \"1\":\n          batch.draw(number1, 10 + 2 * i, 0, 2, 2)\n          break;\n        case \"2\":\n          batch.draw(number2, 10 + 2 * i, 0, 2, 2)\n          break;\n        case \"3\":\n          batch.draw(number3, 10 + 2 * i, 0, 2, 2)\n          break;\n        case \"4\":\n          batch.draw(number4, 10 + 2 * i, 0, 2, 2)\n          break;\n        case \"5\":\n          batch.draw(number5, 10 + 2 * i, 0, 2, 2)\n          break;\n        case \"6\":\n          batch.draw(number6, 10 + 2 * i, 0, 2, 2)\n          break;\n        case \"7\":\n          batch.draw(number7, 10 + 2 * i, 0, 2, 2)\n          break;\n        case \"8\":\n          batch.draw(number8, 10 + 2 * i, 0, 2, 2)\n          break;\n        case \"9\":\n          batch.draw(number9, 10 + 2 * i, 0, 2, 2)\n          break;\n\n      }\n\n    }\n\n    for (let ground of grounds) {\n      batch.draw(groundsImg, ground.x, ground.y, 10, 10)\n      if (stop == 0) {\n        ground.x = ground.x - 0.5\n      }\n\n    }\n\n\n    // ctx?.rotate(40 * Math.PI / 180)\n    if (stop == 0) {\n      runAnimation\n        .getKeyFrame(stateTime, PlayMode.LOOP)\n        .draw(batch, bird.x, bird.y, 4, 4);\n    }\n    else {\n      runAnimation1\n        .getKeyFrame(stateTime, PlayMode.LOOP)\n        .draw(batch, bird.x, bird.y, 5, 5);\n    }\n\n    stateTime += delta;\n\n\n\n    for (let pipe of pipes) {\n      indexPipe = pipes.indexOf(pipe)\n      if (pipe.x < -10) {\n        pipes.splice(indexPipe, 1)\n        // console.log(pipes.length)\n      }\n\n    }\n\n\n\n\n    indexMemo = 1;\n\n    // batch.draw(scoreImg, 2, 0, 10, 10)\n\n\n\n\n\n\n\n    batch.setColor(0.4, 0.4, 0.4, 1);\n\n    batch.setColor(1, 1, 1, 1);\n\n\n\n\n    batch.end();\n\n\n\n\n\n\n  });\n  // grounds.every(function (e) {\n  //   e.x = e.x - 10\n  //   console.log(e.x)\n  // })\n};\n\n\n\n\n\n\ninit();\n\n/**\n * 1. Typescript\n * 2. WebGL\n * 3. Async/await, promise\n */\n"],"sourceRoot":""}