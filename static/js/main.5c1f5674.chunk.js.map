{"version":3,"sources":["index.tsx"],"names":["indexPipe","canvas","createStage","getCanvas","viewport","createViewport","inputHandler","createViewportAwareInputHandler","score","Realscore","stop","a","gl","getContext","camera","getCamera","batch","createBatch","whiteTex","createWhiteTexture","loadTexture","birdsImg","skyImg","groundsImg","bee1Img","pipeImg","pipeDownImg","signImg","treeImg","wireImg","house","cloud","sora","number1","number2","number3","number4","number5","number6","number7","number8","number9","number0","bikeImg","bike2Img","birdImg","TextureRegion","splitTexture","bird","x","y","loadAtlas","mainAtlas","findRegions","runAnimation","createAnimation","runAnimation1","bees01","bikes","pipes","trees","wires","treeIndex","wireIndex","grounds","gr","accumulate","accumulate1","stateTime","clearColor","createGameLoop","delta","isTouched","pipe","push","speedup","Math","random","powerup","floor","clear","COLOR_BUFFER_BIT","setProjection","combined","begin","draw","wire","bee","tree","bike","round","console","log","Number","isInteger","toString","i","length","ground","getKeyFrame","PlayMode","LOOP","indexOf","splice","setColor","end","init"],"mappings":"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","file":"static/js/main.5c1f5674.chunk.js","sourcesContent":["import './index.css';\nimport {\n  createAnimation,\n  createBatch,\n  createGameLoop,\n  createStage,\n  createViewport,\n  createViewportAwareInputHandler,\n  createWhiteTexture,\n  loadAtlas,\n  loadTexture,\n  PlayMode,\n  TextureRegion,\n  Vector2\n} from 'gdxjs';\nimport { time } from 'console';\n\n// WebGL\nconst stage = createStage();\n\nconst canvas = stage.getCanvas();\n// const ctx = canvas.getContext(\"2d\")\nconst viewport = createViewport(canvas, 50, 100);\nlet count = 0\nconst inputHandler = createViewportAwareInputHandler(canvas, viewport);\nlet store = {\n  x: 5,\n  y: 5\n}\nlet score = 0;\nlet Realscore = \"\";\nlet stop = 0\nlet indexPipe\nlet drawTime = 0\nconst init = async () => {\n  // const stage = createStage();\n  // const canvas = stage.getCanvas();\n\n  // const viewport = createViewport(canvas, 50, 100);\n\n  const gl = viewport.getContext();\n  const camera = viewport.getCamera();\n\n  let breakFun = function breakFunc() {\n\n  }\n\n  const batch = createBatch(gl);\n  const whiteTex = createWhiteTexture(gl);\n  const birdsImg = await loadTexture(gl, './main.png');\n  const skyImg = await loadTexture(gl, './sky.jpg');\n  const groundsImg = await loadTexture(gl, './base.jpg');\n  const bee1Img = await loadTexture(gl, './bee01.png');\n  const pipeImg = await loadTexture(gl, './pipe.png');\n  const pipeDownImg = await loadTexture(gl, './pipe-down.png');\n  const signImg = await loadTexture(gl, './sign.png');\n  const treeImg = await loadTexture(gl, './tree.png');\n  const wireImg = await loadTexture(gl, './wire.png');\n  const house = await loadTexture(gl, './house.png');\n  const cloud = await loadTexture(gl, './cloud.png');\n  const sora = await loadTexture(gl, './sora.jpg');\n  const number1 = await loadTexture(gl, './1.png');\n  const number2 = await loadTexture(gl, './2.png');\n  const number3 = await loadTexture(gl, './3.png');\n  const number4 = await loadTexture(gl, './4.png');\n  const number5 = await loadTexture(gl, './5.png');\n  const number6 = await loadTexture(gl, './6.png');\n  const number7 = await loadTexture(gl, './7.png');\n  const number8 = await loadTexture(gl, './8.png');\n  const number9 = await loadTexture(gl, './9.png');\n  const number0 = await loadTexture(gl, './0.png');\n\n\n\n\n\n  const bikeImg = await loadTexture(gl, './bike.png');\n  const bike2Img = await loadTexture(gl, './bike2.png');\n\n\n\n\n  const birdImg = TextureRegion.splitTexture(birdsImg, 3, 1)\n  const bird = {\n    x: 5,\n    y: 40\n  }\n  const gr4 = {\n    x: 40,\n    y: 90\n  }\n  const gr3 = {\n    x: 30,\n    y: 90\n  }\n  const gr2 = {\n    x: 20,\n    y: 90\n  }\n  const gr1 = {\n    x: 10,\n    y: 90\n  }\n  const gr0 = {\n    x: 0,\n    y: 90\n  }\n\n\n  const mainAtlas = await loadAtlas(gl, './enemy.atlas', {});\n  const runRegions = mainAtlas.findRegions('boss_projectile_A');\n  const runRegions1 = mainAtlas.findRegions('boss_die');\n  const runAnimation = createAnimation(0.1, birdImg);\n  const runAnimation1 = createAnimation(50, birdImg);\n\n\n\n  const bees01: { x: number; y: number; powerup: number }[] = [];\n\n  const bikes: { x: number; y: number; speedup: number }[] = [];\n  const pipes: { x: number; y: number; }[] = [];\n  const trees: { x: number; y: number; }[] = [\n    {\n      x: 0,\n      y: 80\n    }\n  ];\n  const wires: { x: number; y: number; }[] = [\n    {\n      x: 0,\n      y: 65\n    }\n  ];\n  let treeIndex = 0;\n  let wireIndex = 0;\n  // const treebase = {\n  //   x: 40,\n  //   y: 80\n  // }\n  const grounds: { x: number; y: number }[] = [];\n  const gr: { x: number; y: number }[] = [\n    {\n      x: 0,\n      y: 90\n    },\n    {\n      x: 10,\n      y: 90\n    },\n    {\n      x: 20,\n      y: 90\n    },\n    {\n      x: 30,\n      y: 90\n    },\n    {\n      x: 40,\n      y: 90\n    }\n  ];\n\n\n  let indexMemo = 0;\n  let indexMole = 0;\n  const DROP_RATE = 4;\n  let accumulate = 0;//?\n  let accumulate1 = 0;//?\n  let accuTree = 0;\n\n  const mole_SIZE = 10;\n\n  let oldstore = {\n    x: 0,\n    y: 0\n  }\n  let signal = 1\n  let drawSignal = 0;\n  let stateTime = 0;//?\n  let accumulateScore = 0;\n  gl.clearColor(0, 0, 0, 1);\n  createGameLoop(delta => {\n    if (inputHandler.isTouched() && stop == 0) {\n\n      bird.y = bird.y - 2\n\n\n\n    }\n    if (inputHandler.isTouched() && stop == 1) {\n      for (let pipe of pipes) {\n        pipe.x = pipe.x - 30\n      }\n      bird.y = 40\n      score = 0\n      stop = 0\n\n    }\n    accumulate += delta;\n    accumulate1 += delta;\n    accuTree += delta\n\n\n    if (accumulate1 > 1.5 && stop == 0) {\n      accumulate1 = 0;\n\n      bikes.push({\n        x: 25,\n        y: 80,\n        speedup: Math.random()\n      })\n\n    }\n\n\n\n    if (accumulate > 2 && stop == 0) {\n      accumulate = 0;\n      bees01.push(\n        {\n          x: 50,\n          y: 30,\n          powerup: Math.random()\n        }\n      )\n      pipes.push(\n        {\n          x: 45,\n\n          y: Math.floor(Math.random() * (80 - 30 + 1)) + 30,\n        }\n      )\n\n\n    }\n    if (trees[treeIndex].x < -30 && stop == 0) {\n\n\n      trees.push(\n        {\n          x: 50,\n          y: 80,\n        }\n      )\n      treeIndex = treeIndex + 1\n\n    }\n    if (wires[wireIndex].x < -9 && stop == 0) {\n\n\n      wires.push(\n        {\n          x: 50,\n          y: 65,\n        }\n      )\n      wireIndex = treeIndex + 1\n\n    }\n\n\n\n\n    grounds.push({\n      x: 1 * gr[0].x,\n      y: 90\n    })\n    grounds.push({\n      x: 1 * gr[4].x,\n      y: 90\n    })\n    grounds.push({\n      x: 1 * gr[3].x,\n      y: 90\n    })\n    grounds.push({\n      x: 1 * gr[2].x,\n      y: 90\n    })\n\n\n\n\n\n\n\n\n\n\n\n\n\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    batch.setProjection(camera.combined);\n    batch.begin();\n    batch.draw(whiteTex, 0, 0, 50, 100);\n\n\n\n    if (stop == 0) {\n      bird.y = bird.y + 0.5\n    }\n    else {\n      bird.y = bird.y\n    }\n\n\n\n    // batch.draw(treeImg, treebase.x, treebase.y, 20, 10)\n    // batch.draw(treeImg, treebase.x - 20, treebase.y, 20, 10)\n\n    // batch.draw(treeImg, treebase.x - 40, treebase.y, 20, 10)\n    // treebase.x = treebase.x - 0.1\n\n\n\n\n\n    for (let wire of wires) {\n\n      batch.draw(sora, wire.x, wire.y - 70, 20, 40)\n      batch.draw(sora, wire.x + 20, wire.y - 70, 20, 40)\n      batch.draw(sora, wire.x + 40, wire.y - 70, 20, 40)\n\n      batch.draw(skyImg, wire.x, wire.y - 30, 20, 25)\n      batch.draw(skyImg, wire.x + 20, wire.y - 30, 20, 25)\n      batch.draw(skyImg, wire.x + 40, wire.y - 30, 20, 25)\n\n      batch.draw(cloud, wire.x, wire.y - 10, 20, 25)\n      batch.draw(cloud, wire.x + 20, wire.y - 10, 20, 25)\n      batch.draw(cloud, wire.x + 40, wire.y - 10, 20, 25)\n\n      batch.draw(house, wire.x, wire.y, 20, 25)\n      batch.draw(house, wire.x + 20, wire.y, 20, 25)\n      batch.draw(house, wire.x + 40, wire.y, 20, 25)\n\n      batch.draw(wireImg, wire.x, wire.y, 20, 25)\n      batch.draw(wireImg, wire.x + 20, wire.y, 20, 25)\n      batch.draw(wireImg, wire.x + 40, wire.y, 20, 25)\n\n\n\n\n\n\n      // if (stop == 1) {\n      //   break;\n      // }\n      if (stop == 0) {\n        wire.x = wire.x - 0.1\n      }\n\n\n\n\n    }\n\n    for (let bee of bees01) {\n      batch.draw(bee1Img, bee.x, bee.y, 10, 10)\n      // if (stop == 1) {\n      //   break;\n      // }\n      if (bee.powerup < 0.3 && stop == 0) {\n        bee.x = bee.x - 0.2\n      }\n      else {\n        if (stop == 0) {\n          bee.x = bee.x - 1\n        }\n\n\n      }\n    }\n    for (let tree of trees) {\n\n      batch.draw(treeImg, tree.x, tree.y, 40, 10)\n      batch.draw(treeImg, tree.x + 40, tree.y, 40, 10)\n\n\n\n\n\n      if (stop == 0) {\n        tree.x = tree.x - 0.1\n      }\n\n\n\n\n      // if (stop == 1) {\n      //   break;\n      // }\n    }\n\n\n    for (let bike of bikes) {\n      if (bike.speedup < 0.2) {\n        batch.draw(bikeImg, bike.x, bike.y, 50, 10)\n\n        if (stop == 0) {\n          bike.x = bike.x - 0.2\n        }\n      }\n      else {\n        batch.draw(bike2Img, bike.x - 10, bike.y, 50, 10)\n        if (stop == 0) {\n          bike.x = bike.x - 0.4\n        }\n\n\n      }\n\n    }\n    accumulateScore += delta\n    for (let pipe of pipes) {\n\n      batch.draw(pipeImg, pipe.x, pipe.y, 10, 100)\n      batch.draw(signImg, pipe.x + 3.5, pipe.y + 7, 3, 3)\n\n\n      batch.draw(pipeDownImg, pipe.x, (90 - (90 - pipe.y) - 20) - 100, 10, 100)\n      if (stop == 0) {\n        pipe.x = pipe.x - 0.4\n      }\n\n\n      if (bird.y < pipe.y &&\n        bird.y > pipe.y - 20 &&\n        Math.round(bird.x - pipe.x - 2.5) == 0 &&\n\n\n        stop == 0\n      ) {\n\n        score = score + 0.5\n        console.log(score)\n\n      }\n      else if (bird.y > pipe.y &&\n        bird.x + 5 > pipe.x &&\n        bird.x < pipe.x + 10 ||\n        bird.y < pipe.y - 20 &&\n        bird.x + 5 > pipe.x &&\n        bird.x < pipe.x + 10 ||\n        bird.y >= 85) {\n        stop = 1\n      }\n      // if (stop == 1) {\n      //   break;\n      // }\n    }\n    // console.log(accumulateScore)\n\n    if (Number.isInteger(score)) {\n      Realscore = score.toString();\n    }\n    for (var i = Realscore.length - 1; i >= 0; i--) {\n      switch (Realscore[i]) {\n        case \"0\":\n          batch.draw(number0, 10 + 2 * i, 0, 2, 2)\n          break;\n        case \"1\":\n          batch.draw(number1, 10 + 2 * i, 0, 2, 2)\n          break;\n        case \"2\":\n          batch.draw(number2, 10 + 2 * i, 0, 2, 2)\n          break;\n        case \"3\":\n          batch.draw(number3, 10 + 2 * i, 0, 2, 2)\n          break;\n        case \"4\":\n          batch.draw(number4, 10 + 2 * i, 0, 2, 2)\n          break;\n        case \"5\":\n          batch.draw(number5, 10 + 2 * i, 0, 2, 2)\n          break;\n        case \"6\":\n          batch.draw(number6, 10 + 2 * i, 0, 2, 2)\n          break;\n        case \"7\":\n          batch.draw(number7, 10 + 2 * i, 0, 2, 2)\n          break;\n        case \"8\":\n          batch.draw(number8, 10 + 2 * i, 0, 2, 2)\n          break;\n        case \"9\":\n          batch.draw(number9, 10 + 2 * i, 0, 2, 2)\n          break;\n\n      }\n\n    }\n\n    for (let ground of grounds) {\n      batch.draw(groundsImg, ground.x, ground.y, 10, 10)\n      ground.x = ground.x - 0.5\n    }\n\n\n    // ctx?.rotate(40 * Math.PI / 180)\n    if (stop == 0) {\n      runAnimation\n        .getKeyFrame(stateTime, PlayMode.LOOP)\n        .draw(batch, bird.x, bird.y, 5, 5);\n    }\n    else {\n      runAnimation1\n        .getKeyFrame(stateTime, PlayMode.LOOP)\n        .draw(batch, bird.x, bird.y, 5, 5);\n    }\n\n    stateTime += delta;\n\n\n\n    for (let pipe of pipes) {\n      indexPipe = pipes.indexOf(pipe)\n      if (pipe.x < -10) {\n        pipes.splice(indexPipe, 1)\n        // console.log(pipes.length)\n      }\n\n    }\n\n\n\n\n    indexMemo = 1;\n\n    // batch.draw(scoreImg, 2, 0, 10, 10)\n\n\n\n\n\n\n\n    batch.setColor(0.4, 0.4, 0.4, 1);\n\n    batch.setColor(1, 1, 1, 1);\n\n\n\n\n    batch.end();\n\n\n\n\n\n\n  });\n  // grounds.every(function (e) {\n  //   e.x = e.x - 10\n  //   console.log(e.x)\n  // })\n};\n\n\n\n\n\n\ninit();\n\n/**\n * 1. Typescript\n * 2. WebGL\n * 3. Async/await, promise\n */\n"],"sourceRoot":""}